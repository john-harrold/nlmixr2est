% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bobyqa.R
\name{bobyqaControl}
\alias{bobyqaControl}
\title{Control for bobyqa estimation method in nlmixr2}
\usage{
bobyqaControl(
  npt = NULL,
  rhobeg = NULL,
  rhoend = NULL,
  iprint = 0L,
  maxfun = 100000L,
  returnBobyqa = FALSE,
  stickyRecalcN = 4,
  maxOdeRecalc = 5,
  odeRecalcFactor = 10^(0.5),
  useColor = crayon::has_color(),
  printNcol = floor((getOption("width") - 23)/12),
  print = 1L,
  normType = c("rescale2", "mean", "rescale", "std", "len", "constant"),
  scaleType = c("nlmixr2", "norm", "mult", "multAdd"),
  scaleCmax = 1e+05,
  scaleCmin = 1e-05,
  scaleC = NULL,
  scaleTo = 1,
  rxControl = NULL,
  optExpression = TRUE,
  sumProd = FALSE,
  addProp = c("combined2", "combined1"),
  calcTables = TRUE,
  compress = TRUE,
  covMethod = c("r", ""),
  adjObf = TRUE,
  ci = 0.95,
  sigdig = 4,
  sigdigTable = NULL,
  ...
)
}
\arguments{
\item{npt}{The number of points used to approximate the objective
function via a quadratic approximation. The value of npt must be
in the interval [n+2,(n+1)(n+2)/2] where n is the number of
parameters in `par`. Choices that exceed 2*n+1 are not
recommended.  If not defined, it will be set to min(n * 2, n+2).}

\item{rhobeg}{`rhobeg` and `rhoend` must be set to the initial and
final values of a trust region radius, so both must be positive
with `0 < rhoend < rhobeg`. Typically `rhobeg` should be about
one tenth of the greatest expected change to a variable.  If the
user does not provide a value, this will be set to `min(0.95, 0.2
* max(abs(par)))`.  Note also that smallest difference
`abs(upper-lower)` should be greater than or equal to `rhobeg*2`.
If this is not the case then `rhobeg` will be adjusted.}

\item{rhoend}{The smallest value of the trust region radius that is
allowed. If not defined, then 1e-6 times the value set for
`rhobeg` will be used.}

\item{iprint}{The value of `iprint` should be set to an integer
value in `0, 1, 2, 3, ...`, which controls the amount of
printing.  Specifically, there is no output if `iprint=0` and
there is output only at the start and the return if `iprint=1`.
Otherwise, each new value of `rho` is printed, with the best
vector of variables so far and the corresponding value of the
objective function. Further, each new value of the objective
function with its variables are output if `iprint=3`.  If `iprint
> 3`, the objective function value and corresponding variables
are output every `iprint` evaluations.  Default value is `0`.}

\item{maxfun}{The maximum allowed number of function
evaluations. If this is exceeded, the method will terminate.}
}
\value{
bobqya control structure
}
\description{
Control for bobyqa estimation method in nlmixr2
}
\examples{

\donttest{
# A logit regression example with emax model

dsn <- data.frame(i=1:1000)
dsn$time <- exp(rnorm(1000))
dsn$DV=rbinom(1000,1,exp(-1+dsn$time)/(1+exp(-1+dsn$time)))

mod <- function() {
 ini({
   E0 <- 0.5
   Em <- 0.5
   E50 <- 2
   g <- fix(2)
 })
 model({
   v <- E0+Em*time^g/(E50^g+time^g)
   ll(bin) ~ DV * v - log(1 + exp(v))
 })
}

fit2 <- nlmixr(mod, dsn, est="bobyqa")

print(fit2)

# you can also get the nlm output with fit2$nlm

fit2$bobyqa

# The nlm control has been modified slightly to include
# extra components and name the parameters
}
}
\author{
Matthew L. Fidler
}
